{"ast":null,"code":"var _jsxFileName = \"/Users/minnnning/Desktop/chat-gpt-app/src/components/GptComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GptComponent = () => {\n  _s();\n  const [text, setText] = useState('');\n  const [prediction, setPrediction] = useState('');\n  const API_KEY = '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';\n  const API_URL = 'https://api.openai.com/v1/engines/davinci-codex/completions';\n  const handleChange = event => {\n    setText(event.target.value);\n    console.log(setText);\n  };\n  const handleKeyPress = async event => {\n    if (event.key === 'Enter') {\n      const prompt = text.trim() + ' ';\n      const response = await axios.post(API_URL, {\n        prompt: prompt,\n        max_tokens: 5,\n        n: 1,\n        stop: ['\\n']\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${API_KEY}`\n        }\n      });\n      setPrediction(response.data.choices[0].text);\n      setText('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: text,\n      onChange: handleChange,\n      onKeyPress: handleKeyPress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(GptComponent, \"2OdPoG0IPJiZe0FaBDIRVU/ZYlo=\");\n_c = GptComponent;\nexport default GptComponent;\nvar _c;\n$RefreshReg$(_c, \"GptComponent\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GptComponent","_s","text","setText","prediction","setPrediction","API_KEY","API_URL","handleChange","event","target","value","console","log","handleKeyPress","key","prompt","trim","response","post","max_tokens","n","stop","headers","data","choices","children","type","onChange","onKeyPress","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/minnnning/Desktop/chat-gpt-app/src/components/GptComponent.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst GptComponent = () => {\n  const [text, setText] = useState('');\n  const [prediction, setPrediction] = useState('');\n\n  const API_KEY = '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';\n  const API_URL = 'https://api.openai.com/v1/engines/davinci-codex/completions';\n\n  const handleChange = (event) => {\n    setText(event.target.value);\n    console.log(setText)\n  };\n\n  const handleKeyPress = async (event) => {\n    if (event.key === 'Enter') {\n      const prompt = text.trim() + ' ';\n      const response = await axios.post(API_URL, {\n        prompt: prompt,\n        max_tokens: 5,\n        n: 1,\n        stop: ['\\n']\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${API_KEY}`\n        }\n      });\n\n      setPrediction(response.data.choices[0].text);\n      setText('');\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" value={text} onChange={handleChange} onKeyPress={handleKeyPress} />\n      <div>{prediction}</div>\n    </div>\n  );\n};\n\nexport default GptComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,OAAO,GAAG,qDAAqD;EACrE,MAAMC,OAAO,GAAG,6DAA6D;EAE7E,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9BN,OAAO,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BC,OAAO,CAACC,GAAG,CAACV,OAAO,CAAC;EACtB,CAAC;EAED,MAAMW,cAAc,GAAG,MAAOL,KAAK,IAAK;IACtC,IAAIA,KAAK,CAACM,GAAG,KAAK,OAAO,EAAE;MACzB,MAAMC,MAAM,GAAGd,IAAI,CAACe,IAAI,EAAE,GAAG,GAAG;MAChC,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAACZ,OAAO,EAAE;QACzCS,MAAM,EAAEA,MAAM;QACdI,UAAU,EAAE,CAAC;QACbC,CAAC,EAAE,CAAC;QACJC,IAAI,EAAE,CAAC,IAAI;MACb,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAG,UAASjB,OAAQ;QACrC;MACF,CAAC,CAAC;MAEFD,aAAa,CAACa,QAAQ,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACvB,IAAI,CAAC;MAC5CC,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAED,oBACEJ,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAAChB,KAAK,EAAET,IAAK;MAAC0B,QAAQ,EAAEpB,YAAa;MAACqB,UAAU,EAAEf;IAAe;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACtFlC,OAAA;MAAA2B,QAAA,EAAMtB;IAAU;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnB;AAEV,CAAC;AAAChC,EAAA,CAtCID,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}