{"ast":null,"code":"var _jsxFileName = \"/Users/minnnning/Desktop/chat-gpt-app/src/components/GptChatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chatbot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n  const API_KEY = \"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\"; // 여기에 API 키를 넣어주세요.\n  const API_URL = \"https://api.openai.com/v1/completions\";\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const headers = {\n      Authorization: `Bearer ${API_KEY}`,\n      \"Content-Type\": \"application/json\"\n    };\n    const data = {\n      model: \"text-davinci-002\",\n      prompt: inputText,\n      max_tokens: 150,\n      temperature: 0.0,\n      n: 1,\n      stop: \"\\n\"\n    };\n    try {\n      const response = await axios.post(API_URL, data, {\n        headers\n      });\n      const newMessage = response.data.choices[0].text.trim();\n      setMessages([...messages, {\n        type: \"user\",\n        text: inputText\n      }]);\n      setMessages([...messages, {\n        type: \"bot\",\n        text: newMessage\n      }]);\n    } catch (error) {\n      console.error(error);\n    }\n    setInputText(\"\");\n  };\n  const handleChange = event => {\n    setInputText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.type,\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: message.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Chatbot, \"X28Fb2vdS8pPjhVxvW/fcexke1Y=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","inputText","setInputText","API_KEY","API_URL","handleSubmit","event","preventDefault","headers","Authorization","data","model","prompt","max_tokens","temperature","n","stop","response","post","newMessage","choices","text","trim","type","error","console","handleChange","target","value","children","map","message","index","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","_c","$RefreshReg$"],"sources":["/Users/minnnning/Desktop/chat-gpt-app/src/components/GptChatbot.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction Chatbot() {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState(\"\");\n\n  const API_KEY = \"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\"; // 여기에 API 키를 넣어주세요.\n  const API_URL = \"https://api.openai.com/v1/completions\";\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const headers = {\n      Authorization: `Bearer ${API_KEY}`,\n      \"Content-Type\": \"application/json\",\n    };\n\n    const data = {\n      model: \"text-davinci-002\",\n      prompt: inputText,\n      max_tokens: 150,\n      temperature: 0.0,\n      n: 1,\n      stop: \"\\n\",\n    };\n\n    try {\n      const response = await axios.post(API_URL, data, { headers });\n      const newMessage = response.data.choices[0].text.trim();\n      setMessages([...messages, { type: \"user\", text: inputText }]);\n      setMessages([...messages, { type: \"bot\", text: newMessage }]);\n    } catch (error) {\n      console.error(error);\n    }\n\n    setInputText(\"\");\n  };\n\n  const handleChange = (event) => {\n    setInputText(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((message, index) => (\n          <div key={index} className={message.type}>\n            <span>{message.text}</span>\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={inputText} onChange={handleChange} />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Chatbot;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}